@import "variables";
@import "themes";

@mixin page {
  flex-grow: 1;
  display: flex;
  flex-direction: column;

  .page-content {
    padding: 42px 12% 140px;
    box-sizing: border-box;
    flex-grow: 1;

    @media screen and (max-width: $breakpoint-sm) {
      padding-right: 20px;
      padding-left: 20px;
      padding-bottom: 40px;
      max-width: 100%;
      overflow: auto;
    }
  }
}

@mixin common-article-styles {
  img {
    border: 1px solid $color-gray-dark;
    max-width: 100%;
  }

  img[src$="robot1.png"] {
    border: none;
    height: 230px;
    float: right;
    margin: 10px 5px 10px 20px;
  }

  img[src$="robot2.png"] {
    border: none;
    height: 210px;
    float: right;
    margin: 10px 5px 10px 20px;
  }

  li {
    margin-top: 3px;
    margin-bottom: 3px;
  }
}


@mixin themeProperty($theme, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties) {
  @if $additionalPropertiesPositionIsFront {
    #{$property}: unquote($additionalProperties + ' ' + map-get($theme, $color));
  } @else {
    #{$property}: unquote(map-get($theme, $color) + ' ' + $additionalProperties);
  }
}

@mixin theme($property, $color, $additionalPropertiesPositionIsFront: false, $additionalProperties: '') {
  $light: map-get($themes, $light-theme);
  $dark: map-get($themes, $dark-theme);

  @include themeProperty($light, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);

  @media (prefers-color-scheme: dark) {
    @include themeProperty($dark, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);
  }
}

@mixin themeImage($alias, $additionalProperties: '') {
  $light: map-get($themes, $light-theme);
  $dark: map-get($themes, $dark-theme);
  $lightImg: unquote(map-get($light, $alias));
  $darkImg: unquote(map-get($dark, $alias) + ' ' + $additionalProperties);

  background: url(#{$lightImg});
  @media (prefers-color-scheme: dark) {
    background: url(#{$darkImg});
  }
}
